# -*- coding: utf-8 -*-
"""2_MILP with OrTools.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Fa-qrw5bqlpCTDNn7ERTGIJw96nHneqO

#Problem
Max: X+Y

Constraints:

-x+2y <= 7

2x+y <= 14

2x-y <= 10

0 <= x<= 10

0 <= y<= 10

x is an integer

#Analysis

Here we can see that x is an integer and the y is not(as doesn't mention)..

So, we will use CBC solver instead of GLOP as we used in lp problem cause CBC will be appropriate for Mixed Linear Intefer Programming

#installation
"""

!pip install ortools

from ortools.linear_solver import pywraplp

solver = pywraplp.Solver.CreateSolver('CBC') #Change GLOP cause it does not work on integer problem

#Variables
x=solver.IntVar(0,10,'x') #lower bound , upper bound, string #For an integer output use IntVar instead of NumVar
y=solver.NumVar(0,10,'y')

#Constraints

solver.Add(-x+2*y <= 7)
solver.Add(2*x+y <= 14)
solver.Add(2*x-y <= 10)

#Obejective
solver.Maximize(x+y)


#Results:

results = solver.Solve()

#confirm optimal or not

if results==pywraplp.Solver.OPTIMAL: print('optimal found')

print('x:', x.solution_value())

print('y:', y.solution_value())